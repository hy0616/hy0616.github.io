<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>每天记录一点点</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hyblog.site/"/>
  <updated>2017-01-09T09:03:41.909Z</updated>
  <id>http://hyblog.site/</id>
  
  <author>
    <name>HY</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>安装ubuntu后需要做的事</title>
    <link href="http://hyblog.site/2017/01/09/%E5%AE%89%E8%A3%85ubuntu%E5%90%8E%E9%9C%80%E8%A6%81%E5%81%9A%E7%9A%84%E4%BA%8B/"/>
    <id>http://hyblog.site/2017/01/09/安装ubuntu后需要做的事/</id>
    <published>2017-01-09T08:40:27.000Z</published>
    <updated>2017-01-09T09:03:41.909Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装Vim"><a href="#1-安装Vim" class="headerlink" title="1.安装Vim"></a>1.安装Vim</h3><pre><code>sudo apt-get install vim
</code></pre><h3 id="2-更新源"><a href="#2-更新源" class="headerlink" title="2.更新源"></a>2.更新源</h3><a id="more"></a>
<blockquote>
<p>系统自带的有些源在国内访问不了，能访问的速度也很慢，所以我们跟换为国内源，国内有很多不错的源，比如阿里源、163源、北京交大、上海交通、清华大学等。</p>
</blockquote>
<ul>
<li><p>首先备份一下系统自带源，以备以后用到</p>
<pre><code>sudo cp /etc/apt/sources.list /etc/apt/sources.list.backup
</code></pre></li>
<li><p>打开并删除源设置文件内容</p>
<pre><code>sudo gedit /etc/apt/sources.list
</code></pre></li>
<li><p>将国内源添加到配置文件，同步更新资源包</p>
<pre><code>apt-get update                   //更新软件源
apt-get upgrade                 //升级已安装的所有软件包
</code></pre></li>
</ul>
<h3 id="3-双系统时间修正"><a href="#3-双系统时间修正" class="headerlink" title="3.双系统时间修正"></a>3.双系统时间修正</h3><blockquote>
<p>Ubuntu和Windows默认的时间管理方式不同，所以双系统发生时间错乱是正常的。Ubuntu默认时间是把BIOS时间当成GMT+0时间，也就是世界标准时，而我国在东八区(GMT+8)，所以如果你的Ubuntu位置是中国的话你系统显示的时间就是BIOS时间+8小时。假如现在是早上8点，那么你Ubuntu会显示8点，这时BIOS中的时间是0点。</p>
</blockquote>
<ul>
<li><p>ubuntu16.04以上版本</p>
<pre><code>sudo vim /etc/default/rcS   //将UTC=yes设为UTC=no。
</code></pre></li>
<li><p>ubuntu16.4版本</p>
<pre><code>timedatectl set-local-rtc 1 --adjust-system-clock  //关闭UTC并重启
timedatectl set-ntp 0
</code></pre></li>
</ul>
<p><strong>延伸阅读：</strong>开启win time服务<br>同时按下“win键”+“x”组合键，输入“services.msc”,进入“服务项”列表，找到“Windows time ”服务，双击打开,进入服务项属性对话框，点击下方“启动”选项，然后将其启动类型更改为“自动”点击确定,重启生效。</p>
<h3 id="4-win-ubuntu-双系统修改启动顺序"><a href="#4-win-ubuntu-双系统修改启动顺序" class="headerlink" title="4.win+ubuntu 双系统修改启动顺序"></a>4.win+ubuntu 双系统修改启动顺序</h3><ul>
<li><p>执行<code>sudo gedit /etc/defaule/grub</code>编辑grub配置文件，修改GRUB_DEFAULT项,GRUB_DEFAULT代表的就是启动项的顺序，从数字0开始，依次代表如下启动项，（我的电脑为win启动项为2，所以改成 GRUB_DEFAULT=2）。</p>
</li>
<li><p>执行<code>sudo update-grub</code>，更新grub，重启电脑生效。</p>
</li>
</ul>
<h3 id="5-安装经典菜单指示器"><a href="#5-安装经典菜单指示器" class="headerlink" title="5.安装经典菜单指示器"></a>5.安装经典菜单指示器</h3><pre><code>sudo apt-get update
sudo apt-get install classicmenu-indicator
</code></pre><p><strong>延伸阅读</strong><br>通过<code>sudo add-apt-repository ppa: xxx/ppa</code>命令在source.list里添加 ppa 源了（同时完成导入key），++add-apt-repository++是由 <strong>Python-software-properties</strong>这个工具包提供的,所以要先安装python-software-properties 才能使用 add-apt-repository,<br>安装命令：<code>apt-get install python-software-properties</code>。</p>
<h3 id="6-Firefox浏览器设置中文"><a href="#6-Firefox浏览器设置中文" class="headerlink" title="6.Firefox浏览器设置中文"></a>6.Firefox浏览器设置中文</h3><p><strong>检查修改方法分以下几种</strong></p>
<p>1.打开浏览器输入<strong>about:config</strong>将<strong>general.useragent.locale</strong>改为”zh-CN”，重启浏览器生效。</p>
<p>2.执行<code>sudo apt-get install firefox-locale-zh-hans</code>命令安装火狐中文包，重启生效。</p>
<p>3.查看是否安装ubuntu中文语言包，选择System-&gt;Administration-&gt;Language Support(系统设置&gt;全部设置&gt;语言支持)，系统会自动加载所需语言文件，选择安装Chinese(Simplified)，安装升级完成后将汉语(中国)移至最上边，点击应用到整个系统，重启生效。</p>
<p><strong>延伸阅读：安装Adobe Flash player插件</strong></p>
<ul>
<li>官网下载<a href="https://get.adobe.com/flashplayer" target="_blank" rel="external">下载地址</a>，这里选择tar.gz for liunx版本下载。</li>
<li>执行<code>sudo tar -zxvf flash_player_npapi_linux.x86_64.tar.gz</code>进行解压。</li>
<li>执行<code>cd flash_player_npapi_linux.x86_64</code>命令进入解压后文件夹。</li>
<li>执行<code>sudo cp libflashplayer.so /usr/lib/firefox/browser/plugins</code>,拷贝到firefox插件目录下。</li>
</ul>
<h3 id="7-安装Terminator"><a href="#7-安装Terminator" class="headerlink" title="7.安装Terminator"></a>7.安装Terminator</h3><blockquote>
<p>Ubuntu 中默认使用的 shell 终端工具是 gnome-terminal，虽然它已经很好用了，但有时还是无法满足我们程序员各种各样的需求，Terminator可以完美地实现了在 Ubuntu在同一窗口中启动多个终端，并且可以自由的在一个窗口中分割区域建立新终端，还可以通过鼠标拉伸调整每个终端的大小。</p>
</blockquote>
<pre><code>sudo apt-get install terminator
</code></pre><p><strong>延伸阅读：设置键盘快捷键</strong></p>
<ul>
<li>系统设置–文本输入–键盘设置–自定义快捷键–点击+号增加自定义快捷键。</li>
<li>填写名称和命令(名称随便填写，命令填写terminator)。</li>
</ul>
<h3 id="8-win-ubuntu双系统改变启动顺序"><a href="#8-win-ubuntu双系统改变启动顺序" class="headerlink" title="8.win+ubuntu双系统改变启动顺序"></a>8.win+ubuntu双系统改变启动顺序</h3><ul>
<li>执行<code>sudo gedit /etc/default/grub</code>。  //编辑配置文件</li>
<li>修改GRUB_DEFAULT。  //GRUB_DEFAULT代表的就是启动项的顺序，从0开始。</li>
</ul>
<p><strong>延伸阅读</strong></p>
<ul>
<li><p>在win系统下安装ubuntu系统后默认启动的是ubuntu系统，说到启动就不得不说GRUB，Linux下大名鼎鼎的启动管理工具，当然现在已经是GRUB2了，GRUB2和GRUB最重要的区别就是，GRUB存放系统启动信息的文为/boot/grub/menu.lst，而GRUB2则为/boot/grub /grub.cfg。</p>
</li>
<li><p><del>/boot/grub/grub.cfg</del> 这个文件是根据/etc/grub.d的模板和/etc/default/grub的设置自动生成的，不要修改这个文件。</p>
</li>
</ul>
<h3 id="9-安装有道词典"><a href="#9-安装有道词典" class="headerlink" title="9.安装有道词典"></a>9.安装有道词典</h3><p><a href="http://cidian.youdao.com/multi.html?vendor=fanyiweb" target="_blank" rel="external">官网</a>下载相应deb包可直接安装既可。</p>
<p>注：Ubuntu 16.04因为有些依赖问题就无法安装成功，因为官方的deb包（Ubuntu版本的）依赖gstreamer0.10-plugins-ugly，但是该软件在16.04里面已经没有了。</p>
<p><strong>解决办法</strong><br>1.下载deepin的包可以正常安装（亲测可用）。<br>2.去掉deb包里面对于该库的依赖</p>
<ul>
<li>从官网下载Ubuntu版本的deb包。</li>
<li>创建youdao-dict目录，把该deb包解压到youdao-dict目录。<code>dpkg -X ./youdao-dict_1.1.0-0-ubuntu_amd64.deb  youdao-dict</code></li>
<li>解压deb包中的control信息（包的依赖就写在这个文件里面）<code>dpkg -e ./youdao-dict_1.1.0-0-ubuntu_amd64.deb youdao/DEBIAN</code></li>
<li>编辑control文件，删除Depends里面的gstreamer0.10-plugins-ugly。</li>
<li>重新打包<code>dpkg-deb -b youdao youdaobuild.deb</code></li>
<li>安装重新打包的安装包<code>dpkg -i youdaobuild.deb</code></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-安装Vim&quot;&gt;&lt;a href=&quot;#1-安装Vim&quot; class=&quot;headerlink&quot; title=&quot;1.安装Vim&quot;&gt;&lt;/a&gt;1.安装Vim&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;sudo apt-get install vim
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;2-更新源&quot;&gt;&lt;a href=&quot;#2-更新源&quot; class=&quot;headerlink&quot; title=&quot;2.更新源&quot;&gt;&lt;/a&gt;2.更新源&lt;/h3&gt;
    
    </summary>
    
      <category term="Ubuntu" scheme="http://hyblog.site/categories/Ubuntu/"/>
    
    
      <category term="Ubuntu" scheme="http://hyblog.site/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu搭建web开发环境</title>
    <link href="http://hyblog.site/2017/01/09/ubuntu%E6%90%AD%E5%BB%BAweb%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://hyblog.site/2017/01/09/ubuntu搭建web开发环境/</id>
    <published>2017-01-09T08:40:14.000Z</published>
    <updated>2017-01-09T09:11:44.933Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、安装nodejs"><a href="#一、安装nodejs" class="headerlink" title="一、安装nodejs"></a>一、安装nodejs</h3><h5 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a><strong>源码安装</strong></h5><p>1.官网下载nodejs源码，<a href="http://nodejs.org" target="_blank" rel="external">nodejs官网</a>或者<a href="http://nodejs.cn" target="_blank" rel="external">nodejs中文网</a>，下载相应版本。</p>
<a id="more"></a>
<p>2.源码解压安装</p>
<pre><code>apt-get update  //更新源，近期已更新可省略
apt-get install python gcc make g++  //安装依赖包，已安装可省略
sudo cp -r node-v6.9.2.tar.gz /opt/nodejs  //复制源码到安装目录
sudo tar -zxvf node-v6.9.2.tar.gz  //解压源码
cd node-v6.9.2  //进入源码
sudo ./configure  //检测系统配置，生成makefile文件。
sudo make  //源码编译
sudo make install  //安装
</code></pre><p>3.执行<code>node -v</code> 显示node版本号，安装成功。<br>4.安装tj大神写的n(nde版本管理工具)<code>sudo npm install -g n</code>,此后就可用n来切换、安装node版本了。</p>
<p><strong>延伸阅读:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">sudo n  //切换nodejs版本</div><div class="line">sudo n latest  //安装官网最新发布版本</div><div class="line">sudo n stable  //安装官网稳定版本</div><div class="line">sudo n lts  //安装官网最新正式发布LTS版本</div><div class="line">sudo n 6.9.2  //安装指定版本</div><div class="line">sudo n rm 6.9.2 或 sudo n -6.9.2   //删除指定版本nodejs</div><div class="line">sudo n ls  //查看可用node版本</div></pre></td></tr></table></figure></p>
<h3 id="二、通过NPM安装一系列前端管理工具"><a href="#二、通过NPM安装一系列前端管理工具" class="headerlink" title="二、通过NPM安装一系列前端管理工具"></a>二、通过NPM安装一系列前端管理工具</h3><p>1.执行<code>sudo npm install -g gulp</code> 命令安装gulp(自动化构建工具)。<br>2.执行<code>sudo npm install -g grunt-cli</code> 命令安装grunt(自动化构建工具)。<br>3.执行<code>sudo npm install -g bower</code> 命令安装bower(前端包管理工具)。</p>
<h3 id="三、安装Git"><a href="#三、安装Git" class="headerlink" title="三、安装Git"></a>三、安装Git</h3><p>1.执行<code>sudo apt-get install git</code>命令安装git<br>2.测试git是否安装成功，执行<code>git --version</code>命令，输出版本号，安装成功。<br>3.配置git</p>
<pre><code>git config --global user.name &quot;Your Name&quot;  //指定用户名
git config --global user.email &quot;youremail@domain.com&quot;  //指定邮箱
git config --list  //查看配置信息
</code></pre><p>4.创建本地repository</p>
<pre><code>sudo git init localGit //创建名为localGit的本地仓库
cd localGit  //进入文件夹
touch test.md  //创建一个文件
git add test.md  //添加至本地仓库
git commit -m &quot;注释&quot;  //提交至本地仓库
</code></pre><p>5.提交远程仓库</p>
<pre><code>git remote add origin git@github.com:&lt;github用户名&gt;/&lt;仓库名称&gt;git    //本地仓库可远程仓库链接
git push -u origin master  //提交至远程仓库，origin(仓库名)，master(指定分支)
</code></pre><h3 id="四、安装Sublime-Text3"><a href="#四、安装Sublime-Text3" class="headerlink" title="四、安装Sublime Text3"></a>四、安装Sublime Text3</h3><p>1.首先添加sublime text 3的仓库</p>
<pre><code>sudo add-apt-repository ppa:webupd8team/sublime-text-3
</code></pre><p>2.更新软件库</p>
<pre><code>sudo apt-get update
</code></pre><p>3.安装Sublime Text 3</p>
<pre><code>sudo apt install sublime-text-installer
</code></pre><p>4.安装插件管理器Packeage Control</p>
<p>执行命令<code>subl</code>打开Sublime Text 3,按快捷键<strong>ctrl + shift + p</strong> 在弹出的窗口中查找<strong>install package control</strong>命令，单击运行.</p>
<p>5.解决中文输入法问题</p>
<ul>
<li>安装fcitx<code>sudo apt-get install fcitx-table-pinyin</code></li>
<li>配置更改为fcitx，重启电脑</li>
<li><p>打补丁，github<a href="https://github.com/lyfeyaj/sublime-text-imfix" target="_blank" rel="external">下载地址</a></p>
<pre><code>sudo apt-get update &amp;&amp; sudo apt-get upgrade  //更新
git clone https://github.com/lyfeyaj/sublime-text-imfix.git  //下载
cd sublime-text-imfix  //进入
./sublime-imfix  //执行脚本
</code></pre></li>
<li>重启Sublime生效。</li>
</ul>
<h3 id="五、安装chrome"><a href="#五、安装chrome" class="headerlink" title="五、安装chrome"></a>五、安装chrome</h3><p><a href="http://www.google.cn/chrome/browser/desktop/index.html" target="_blank" rel="external">官网</a>下载deb包直接安装。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、安装nodejs&quot;&gt;&lt;a href=&quot;#一、安装nodejs&quot; class=&quot;headerlink&quot; title=&quot;一、安装nodejs&quot;&gt;&lt;/a&gt;一、安装nodejs&lt;/h3&gt;&lt;h5 id=&quot;源码安装&quot;&gt;&lt;a href=&quot;#源码安装&quot; class=&quot;headerlink&quot; title=&quot;源码安装&quot;&gt;&lt;/a&gt;&lt;strong&gt;源码安装&lt;/strong&gt;&lt;/h5&gt;&lt;p&gt;1.官网下载nodejs源码，&lt;a href=&quot;http://nodejs.org&quot;&gt;nodejs官网&lt;/a&gt;或者&lt;a href=&quot;http://nodejs.cn&quot;&gt;nodejs中文网&lt;/a&gt;，下载相应版本。&lt;/p&gt;
    
    </summary>
    
      <category term="web开发" scheme="http://hyblog.site/categories/web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Ubuntu" scheme="http://hyblog.site/tags/Ubuntu/"/>
    
      <category term="web开发环境" scheme="http://hyblog.site/tags/web%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>github+Hexo搭建博客平台-简记录</title>
    <link href="http://hyblog.site/2017/01/09/github-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0-%E7%AE%80%E8%AE%B0%E5%BD%95/"/>
    <id>http://hyblog.site/2017/01/09/github-Hexo搭建博客平台-简记录/</id>
    <published>2017-01-09T08:02:10.000Z</published>
    <updated>2017-01-09T08:31:25.037Z</updated>
    
    <content type="html"><![CDATA[<p>1.创建github帐号，邮箱进行认证。<br>2.创建username.github.io仓库，仓库名称是github特定名称。</p>
<a id="more"></a>
<p>3.克隆远程仓库到本地<code>git clone &quot;地址&quot;</code><br>4.本地仓库操作</p>
<pre><code>cd username.github.io   //进入本地仓库
mkdir blog      //新建blog文件夹
hexo init    //初始化hexo，生成配置文件
npm install hexo-deployer-git --save   //下载添加hexo中git依赖插件，利用hexo上传远程仓库用到。
</code></pre><p>5.下载配置next主题<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">官网详细流程</a><br>6.一个分支用来存放Hexo生成的网站原始的文件，另一个分支用来存放生成的静态网页</p>
<pre><code>git branch hexo    //创建hexo分支
git checkout hexo   //切换到hexo分支
git add /blog     //添加原始文件到暂存区
git commit -m&quot;版本注释&quot;  //从本地暂存区提交至本地仓库hexo分支
git push origin hexo    //将本地hexo分支提交至远程仓库
</code></pre><p>7.将github默认分支改为hexo，因为以后操作都会在hexo分支中。<br>8.将生成静态网页上传至master分支中。</p>
<pre><code>hexo clean  //清理生成文件
hexo g     //从新生成静态网页
hexo s     //开启本地服务器，可用于本地测试
hexo d     //上传至github
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.创建github帐号，邮箱进行认证。&lt;br&gt;2.创建username.github.io仓库，仓库名称是github特定名称。&lt;/p&gt;
    
    </summary>
    
      <category term="github" scheme="http://hyblog.site/categories/github/"/>
    
    
      <category term="github pages" scheme="http://hyblog.site/tags/github-pages/"/>
    
      <category term="hexo" scheme="http://hyblog.site/tags/hexo/"/>
    
      <category term="git" scheme="http://hyblog.site/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>JavaScriptDOM编程艺术</title>
    <link href="http://hyblog.site/2017/01/04/JavaScriptDOM%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/"/>
    <id>http://hyblog.site/2017/01/04/JavaScriptDOM编程艺术/</id>
    <published>2017-01-04T03:01:31.000Z</published>
    <updated>2017-01-09T08:31:25.037Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JavaScript-DOM编程艺术"><a href="#JavaScript-DOM编程艺术" class="headerlink" title="JavaScript DOM编程艺术"></a>JavaScript DOM编程艺术</h2><h5 id="JavaScript-DOM编程艺术是一本比较基础的书籍，讲解了起源、语法、DOM操作、ajax基础运用、h5等基础，读完之后get到很多基础知识，清除自己的基础漏洞。"><a href="#JavaScript-DOM编程艺术是一本比较基础的书籍，讲解了起源、语法、DOM操作、ajax基础运用、h5等基础，读完之后get到很多基础知识，清除自己的基础漏洞。" class="headerlink" title="JavaScript DOM编程艺术是一本比较基础的书籍，讲解了起源、语法、DOM操作、ajax基础运用、h5等基础，读完之后get到很多基础知识，清除自己的基础漏洞。"></a>JavaScript DOM编程艺术是一本比较基础的书籍，讲解了起源、语法、DOM操作、ajax基础运用、h5等基础，读完之后get到很多基础知识，清除自己的基础漏洞。</h5><a id="more"></a>
<h3 id="JavaScript-ECMAscript"><a href="#JavaScript-ECMAscript" class="headerlink" title="JavaScript(ECMAscript)"></a>JavaScript(ECMAscript)</h3><h6 id="1-DHTML是“Dynamic“HTML-动态HTML-的简称。DHTML并不是一项新的技术，而是描述HTML、CSS、JavaScript技术综合的术语。DHTML背后的含义是"><a href="#1-DHTML是“Dynamic“HTML-动态HTML-的简称。DHTML并不是一项新的技术，而是描述HTML、CSS、JavaScript技术综合的术语。DHTML背后的含义是" class="headerlink" title="1.DHTML是“Dynamic“HTML(动态HTML)的简称。DHTML并不是一项新的技术，而是描述HTML、CSS、JavaScript技术综合的术语。DHTML背后的含义是:"></a>1.DHTML是“Dynamic“HTML(动态HTML)的简称。DHTML并不是一项新的技术，而是描述HTML、CSS、JavaScript技术综合的术语。DHTML背后的含义是:</h6><ul>
<li>利用HTML把网页标记为各种元素;</li>
<li>利用CSS设置元素样式和他们的显示位置;</li>
<li>利用JavaScript实时的操控页面和改变样式;</li>
</ul>
<h6 id="2-五个常用的DOM方法"><a href="#2-五个常用的DOM方法" class="headerlink" title="2.五个常用的DOM方法:"></a>2.五个常用的DOM方法:</h6><ul>
<li><code>document.getElementById(&quot;id&quot;)</code>将返回一个对象，该对象对应着文档里的一个特定的元素节点。</li>
<li><code>document.getElementsByTagName(&quot;div&quot;)</code>将返回一个对象数组，对应着文档里的一组特定的元素节点。</li>
<li><code>document.getElementsByClassName(&quot;class&quot;)</code>将返回一个对象数组，对应着文档里的一组特定的元素节点。</li>
<li><code>object.getAttribute(&quot;attribute&quot;)</code> object只能为元素节点。</li>
<li><code>object.setAttribute(&quot;attribute&quot;,&quot;value&quot;)</code> object只能为元素节点。</li>
</ul>
<h6 id="3-JavaScript语言里的对象可以分为三种类型："><a href="#3-JavaScript语言里的对象可以分为三种类型：" class="headerlink" title="3.JavaScript语言里的对象可以分为三种类型："></a>3.JavaScript语言里的对象可以分为三种类型：</h6><ul>
<li><strong>用户对象</strong>：由程序员自行创建的队形;</li>
<li><strong>内建对象</strong>：内建JavaScript语言里的对象;</li>
<li><strong>宿主对象</strong>：由浏览器提供的对象;</li>
</ul>
<h6 id="4-一份文档就是一个节点树节点分为不同类型："><a href="#4-一份文档就是一个节点树节点分为不同类型：" class="headerlink" title="4.一份文档就是一个节点树节点分为不同类型："></a>4.一份文档就是一个节点树节点分为不同类型：</h6><ul>
<li><strong>元素节点</strong>; nodeType属性值为1。</li>
<li><strong>属性节点</strong>; nodeType属性值为2。</li>
<li><strong>文本节点</strong>; nodeType属性值为3。</li>
</ul>
<h6 id="5-DOM提供的新属性："><a href="#5-DOM提供的新属性：" class="headerlink" title="5.DOM提供的新属性："></a>5.DOM提供的新属性：</h6><ul>
<li>childNodes 获取任何元素的所有子元素;</li>
<li>nodeType 总共有12种可取值，但只有3种具有实际价值，元素节点nodeType属性值是1、属性节点nodeType属性值是2、文本节点nodeType属性值是3;</li>
<li>nodeValue 改变文本节点值;</li>
<li>firstChild 获取childNodes第一个子元素;</li>
<li>lastChild 获取childNodes最后一个子元素;</li>
</ul>
<h6 id="6-性能考虑"><a href="#6-性能考虑" class="headerlink" title="6.性能考虑"></a>6.性能考虑</h6><ul>
<li>平稳退化: 确保网页在没有JavaSctipt的情况下也能正常运行;</li>
<li>分离JavaScript: 把网页结构和内容与JavaScript脚本的动作行为分开;(分离JavaScript、渐进渐强、结构样式分离、)</li>
<li>向后兼容性: 确保老版本浏览器不会因为JavaScript脚本而死掉;(对象检测、浏览器嗅探技术)</li>
<li>性能考虑: 确定执行脚本的性能最优;(压缩脚本、合并和放置脚本、尽量少访问DOM、尽量减少标记)</li>
</ul>
<h6 id="7-window对象的open-方法"><a href="#7-window对象的open-方法" class="headerlink" title="7.window对象的open()方法"></a>7.window对象的open()方法</h6><p>JavaScript使用window对象的open()方法来创建新的浏览器窗口这个方法有三个参数<code>window.open(url,name,features)</code>,这三个参数都是可选的，第一个参数为新窗口url地址，第二个参数为新窗口名字，第三个参数是一个以逗号分割的字符串，其内容是新窗口的各种属性。示例<code>window.pen(url,name,&quot;width=300,height=500&quot;)</code></p>
<h6 id="8-”JavaScript-“-伪协议"><a href="#8-”JavaScript-“-伪协议" class="headerlink" title="8.”JavaScript:“ 伪协议"></a>8.”JavaScript:“ 伪协议</h6><p>”真“协议用来在因特网上计算机之间传输数据包，如HTTP协议<code>https://</code>、FTP协议<code>ftp://</code>等，伪协议则是一种非标准化协议。”JavaScript:“伪协议让我们通过一个链接调用JavaScript函数。<code>onclick=&quot;javascript:函数()&quot;</code><br>在HTML文档通过伪协议调用JavaScript代码做法，在较老浏览器或在浏览器禁用JavaScript的情况下会造成链接失败或什么都不做。</p>
<h6 id="9-搜索机器人-searchbot-网络蜘蛛-web-Spider"><a href="#9-搜索机器人-searchbot-网络蜘蛛-web-Spider" class="headerlink" title="9.搜索机器人(searchbot)网络蜘蛛(web Spider)"></a>9.搜索机器人(searchbot)网络蜘蛛(web Spider)</h6><p>搜索机器人是一个自动化程序，他们浏览web的目的是把各种网页添加到搜索引擎的数据库里，各大搜索引擎都有类似的程序，目前只有少数机器人能够理解JavaScript代码，所以你的JavaScript代码不能平稳退化他们在搜索引擎上的排名就可能大受损害。</p>
<h6 id="10-共享onload"><a href="#10-共享onload" class="headerlink" title="10.共享onload"></a>10.共享onload</h6><p>假设两个函数都在页面加载时执行，如果逐一绑定到onload事件上它们当中只有最后一个才被执行<br><code>window.onload=函数1();window.onload=函数2();</code><br>解决方法：1.创建匿名函数来包容要被执行的函数，然后把匿名函数绑定到onload事件上<br><code>window.onload=function(){函数1();函数2();}</code><br>2.弹性最佳解决方案，创建通用函数</p>
<ul>
<li>把现有的onload事件处理函数的值存入变量oldonload;</li>
<li>如果事件上没有绑定任何函数，把新的函数添加给事件;</li>
<li>如果事件绑定了一些函数，就把新函数追加到现有函数末尾;</li>
</ul>
<pre><code>function addloadEvent (fun){
    var oldonload = window.onload;
    if(typeof window.onload != &apos;function&apos;){
        window.onload = fun;
    }else{
        oldonload();
        fun();
    }
}
</code></pre><h6 id="11-DOM-Core-和-HTML-DOM"><a href="#11-DOM-Core-和-HTML-DOM" class="headerlink" title="11.DOM Core 和 HTML DOM"></a>11.DOM Core 和 HTML DOM</h6><h6 id="12-动态创建标记"><a href="#12-动态创建标记" class="headerlink" title="12.动态创建标记"></a>12.动态创建标记</h6><p>传统方法:</p>
<ul>
<li>document对象的write方法可以方便快捷的把字符串插到文档里去。<br><code>document.write(&quot;&lt;p&gt;This is write&lt;/p&gt;&quot;)</code> 但是它违背的行为与表现分离的原则。</li>
<li>innerHTML属性可以读、写给定元素里HTML内容，当插入大段HTML内容，innerHTML属性更适用。</li>
</ul>
<pre><code>window.onload = function(){
     var testdiv = document.getElementById(&quot;div&quot;);
     testdiv.innerHTML = &quot;&lt;p&gt;This is innerHTML&lt;/p&gt;&quot;;
}
</code></pre><p>DOM方法:</p>
<ul>
<li><strong>createElement()</strong>方法完成创建新的元素<code>document.createElement(&quot;p&quot;)</code>，但是不属于任何一棵DOM节点树的组成部分，这种情况称为<strong>节点碎片</strong>。</li>
<li><strong>createTextNode()</strong>方法为新创建的元素创建文本节点<code>document.createTextNode(&quot;Hellow World&quot;)</code>。</li>
<li><strong>appendChild()</strong>方法插入文档节点树<code>parent.appendChild(child)</code>。</li>
<li><strong>inserBefore()</strong>方法把一个新的元素插入到现有元素。</li>
<li><strong>nextSibling()</strong>属性，目标元素的下一个兄弟元素即目标元素的nextSinling属性</li>
</ul>
<pre><code>//插入为目标元素的子元素
window.onload = function(){
    var child = document.createElement(&quot;p&quot;);
    var parent = document.getElementById(&apos;textdiv&apos;);
    parent.appendChild(child);
    var txt = document.createTextNode(&quot;Hello world&quot;);
    child.appendChild(txt);
}

//使用inserBefore方法插入为目标元素的兄弟元素前边
window.onload = function(){
var textp = document.createElement(&quot;p&quot;);
    var textdiv= document.getElementById(&apos;textdiv&apos;);
    var parent = textdiv.parentNode;
    parent.inserBefore(textdiv,textp);
    var txt = document.createTextNode(&quot;Hello world&quot;);
    child.appendChild(txt);
}

//自己编写inserAfter
//newElement 新元素; targetelement 目标元素
function inserAfter (newElement,targetElement){
    var parent = targetElement,patentNode;
    if(parent.lastChild == targetElement)
    parent.appendChild(newElement);
    }else{
    parent.inserBefore(newElement,targetElement.nextSibling);
}
</code></pre><h6 id="13-Ajax"><a href="#13-Ajax" class="headerlink" title="13.Ajax"></a>13.Ajax</h6><p>Ajax主要优势就是对页面的请求以异步方式发送到服务器。<br>Ajax技术的核心就是XMLHttpRequest对象。</p>
<h6 id="14-三位一体的网页"><a href="#14-三位一体的网页" class="headerlink" title="14.三位一体的网页"></a>14.三位一体的网页</h6><ul>
<li>结构层 由HTML或XHTML之类的标记语言负责创建;</li>
<li>表现层 由CSS负责完成，描述页面应该如何呈现;</li>
<li>行为层 JavaScript和DOM的主宰领域;</li>
</ul>
<h6 id="15-用css和js做table斑马线效果"><a href="#15-用css和js做table斑马线效果" class="headerlink" title="15.用css和js做table斑马线效果"></a>15.用css和js做table斑马线效果</h6><p>CSS:<br>== :nth-child(n) 选择器匹配属于其父元素的第 N 个子元素，不论元素的类型。==<br>== n 可以是数字、关键词或公式。==<br>== Odd 和 even 是可用于匹配下标是奇数或偶数的子元素的关键词（第一个子元素的下标是 1）。==<br><code>tr:nth-child(old) {background-color:#ffc}</code><br><code>tr:nth-child(even) {background-color:#fff}</code><br>js:</p>
<pre><code>function table (){
    if(documen.getElementsByTagName)return false;
    var tables = document.getElementsByTagName(&quot;table&quot;);
    var odd,rows;
    for(var i=0; i&gt;tables.length;i++){
        odd = false;
        rows = tables[i].getElementByTagName(&quot;tr&quot;);
        for(var j=0;j&lt;rows;j++){
            if(odd){
                rows[j].style.background = #ffc;
                odd = false;
            }else{
                odd = true;
            }
        }
    }
}
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;JavaScript-DOM编程艺术&quot;&gt;&lt;a href=&quot;#JavaScript-DOM编程艺术&quot; class=&quot;headerlink&quot; title=&quot;JavaScript DOM编程艺术&quot;&gt;&lt;/a&gt;JavaScript DOM编程艺术&lt;/h2&gt;&lt;h5 id=&quot;JavaScript-DOM编程艺术是一本比较基础的书籍，讲解了起源、语法、DOM操作、ajax基础运用、h5等基础，读完之后get到很多基础知识，清除自己的基础漏洞。&quot;&gt;&lt;a href=&quot;#JavaScript-DOM编程艺术是一本比较基础的书籍，讲解了起源、语法、DOM操作、ajax基础运用、h5等基础，读完之后get到很多基础知识，清除自己的基础漏洞。&quot; class=&quot;headerlink&quot; title=&quot;JavaScript DOM编程艺术是一本比较基础的书籍，讲解了起源、语法、DOM操作、ajax基础运用、h5等基础，读完之后get到很多基础知识，清除自己的基础漏洞。&quot;&gt;&lt;/a&gt;JavaScript DOM编程艺术是一本比较基础的书籍，讲解了起源、语法、DOM操作、ajax基础运用、h5等基础，读完之后get到很多基础知识，清除自己的基础漏洞。&lt;/h5&gt;
    
    </summary>
    
      <category term="javaScript" scheme="http://hyblog.site/categories/javaScript/"/>
    
    
      <category term="javaScript" scheme="http://hyblog.site/tags/javaScript/"/>
    
  </entry>
  
</feed>
